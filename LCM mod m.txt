ll prime[100007];
map<ll,ll> factor;
void sieve()
{
    ll i,j;
    prime[1]=1;
    for(i=2;i<100007;i++)
    {
        if(prime[i]==0)
        {
            for(j=2*i;j<100007;j+=i)
            {
                prime[j]=i;
            }
            prime[i]=i;
        }
    }
}
void factorization(vector<ll> v)
{
    ll sz=v.size();
    ll i;
    for(i=0;i<sz;i++)
    {
        map<ll,ll> mp;
        ll x=v[i];
        while(x>1)
        {
            ll f=prime[x];
            mp[f]++;
            x/=f;
        }
        for(auto j:mp)
        {
            factor[j.first]=max(factor[j.first],j.second);
        }
    }
}
ll power(ll x,ll y)
{
    ll ml=1;
    while(y>0)
    {
        if(y&1)
        {
            ml=(ml*x)%mod;
        }
        x=(x*x)%mod;
        y/=2;
    }
    return ml;
}
int main()
{
	ll n;
	cin>>n;
	ll i;
	ll x;
	vector<ll> v;
	for(i=0;i<n;i++)
	{
		cin>>x;
		v.push_back(x);
	}
}