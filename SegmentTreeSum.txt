#include <bits/stdc++.h>
#define ll long long
#define endl '\n'
#define pii pair<ll,ll>
using namespace std;
#define pb push_back;
#define N 4*100007
#define FAST ios_base::sync_with_stdio(false); cin.tie(NULL);
vector<ll> sg(N);
vector<ll> lz(N);
void build(ll l,ll r,ll pos,vector<ll> &v)
{
    if(l>r)return;
    
    if(l==r)
    {
        sg[pos]=v[l];
        return;
    }
    build(l,(l+r)/2,2*pos,v);
    build((l+r)/2+1,r,2*pos+1,v);
    
    sg[pos]=sg[2*pos]+sg[2*pos+1];
    return;
}
void update(ll l,ll r,ll ind,ll val,ll pos,vector<ll> &v)
{
    if(l>r)return;
    if(l==r)
    {
        if(l==ind)
        {
            sg[pos]=val;
        }
        return;
    }
    if(ind>r||ind<l)return;
    update(l,(l+r)/2,ind,val,2*pos,v);
    update((l+r)/2+1,r,ind,val,2*pos+1,v);
    
    sg[pos]=sg[2*pos]+sg[2*pos+1];
    return;
}
ll query(ll l,ll r,ll st,ll end,ll pos,vector<ll> &v)
{
    if(l>r)return 0;
    
    if(l>=st&&r<=end)
    {
        return sg[pos];
    }
    if(l>end)return 0;
    if(r<st)return 0;
    
    ll lftsm=query(l,(l+r)/2,st,end,2*pos,v);
    ll rgtsm=query((l+r)/2+1,r,st,end,2*pos+1,v);
    return lftsm+rgtsm;
}
int main()
{
    FAST;
    ll n,m;
    cin>>n>>m;
    vector<ll> v;
    v.push_back(0);
    ll i,x;
    for(i=0;i<n;i++)
    {
        cin>>x;
        v.push_back(x);
    }
    build(1,n,1,v);
    while(m--)
    {
        ll a,b,c;
        cin>>a>>b>>c;
        b++;
        if(a==1)
        {
            update(1,n,b,c,1,v);
        }
        else
        {
            ll x=query(1,n,b,c,1,v);
            cout<<x<<endl;
        }
    }
}